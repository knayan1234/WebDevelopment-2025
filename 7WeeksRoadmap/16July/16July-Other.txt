
16th July


props and state

state allow components to update internal data dynamically while prop is for sending data from parent to child component

state - build in object in react component that hold data about the component . its mutable means we can update the value using this.setState in class and useState in functional
component .but state value is local and cannot access by child component unless its passed through props .whenever state value changes component will re render to reflect it. 

example

this.setState({      
    id: "2020"
});

this.setState({ id: this.state.id + 1 });

const [count, setCount] = useState(0);

when state changes, React gets informed and immediately re-renders the DOM – not the whole DOM, but only the component with the updated state


Props are used to pass data from a parent component to a child component . they cannot be modified by child component.
React’s data flow between components is uni-directional (from parent to child only).

example

class ParentComponent extends Component {    
    render() {    
        return (        
            <ChildComponent name="First Child" />    
        );  
    }
}

const ChildComponent = (props) => {    
    return <p>{props.name}</p>; 
};











